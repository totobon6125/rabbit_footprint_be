// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  UserInfos UserInfos? // 사용자(Users) 테이블과 사용자 정보(UserInfos) 테이블이 1:1 관계를 맺습니다.
  Posts     Posts[] // 사용자(Users) 테이블과 게시글(Posts) 테이블이 1:N 관계를 맺습니다.
  
  @@map("Users")
}


model Posts {
  postId        Int       @id @default(autoincrement()) @map("postId")
  receiverId    Int       @map("receiverId")
  WriterId      Int       @map("WriterId")
  content       String    @map("content") @db.Text
  relationship  String    @map("relationship")
  createdAt     DateTime  @default(now()) @map("createdAt")
  updatedAt     DateTime  @updatedAt @map("updatedAt")

  User Users @relation(fields: [WriterId], references: [userId], onDelete: Cascade)

  @@map("Posts")
}


model UserInfos {
  userInfoId    Int      @id @default(autoincrement()) @map("userInfoId")
  UserId        Int      @unique @map("UserId")
  nickname      String   @map("nickname") 
  profileImage  String   @map("profileImage")

  createdAt     DateTime @default(now()) @map("createdAt")
  updatedAt     DateTime @updatedAt @map("updatedAt")

  User Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)

  @@map("UserInfos")
}