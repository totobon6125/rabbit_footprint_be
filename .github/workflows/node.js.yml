name: rabbit's_foot CI

on:
  push:
    branches: [ "main" ]

# settings 작업: 환경 변수 설정
jobs:
  settings:
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Variables
        # 환경 변수를 설정하고 GitHub Environment로 전달
        run: |
          echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> $GITHUB_ENV
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> $GITHUB_ENV
          echo "CODE_DEPLOY_APP_NAME=${{ secrets.CODE_DEPLOY_APP_NAME }}" >> $GITHUB_ENV
          echo "DEPLOYMENT_GROUP_NAME=${{ secrets.DEPLOYMENT_GROUP_NAME }}" >> $GITHUB_ENV

# build 작업: 의존성 설치, 빌드, 테스트, 압축
  build:
    needs: settings
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: yarn
      - name: Remove Node Modules
        run: rm -rf node_modules
      - name: Create .env File
        # env 파일 생성 및 환경 변수 추가
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "jwt_key=${{ secrets.JWT_KEY }}" >> .env
          echo "AC_KEY=${{ secrets.AC_KEY }}" >> .env
          echo "RF_KEY=${{ secrets.RF_KEY }}" >> .env
        working-directory: ./
      - name: Zip Files
        run: zip -qq -r ./$GITHUB_SHA.zip .

# delivery 작업: AWS로 배포
  delivery:
    needs: build
    runs-on: ubuntu-latest
    steps:
      #AWS 인증하기
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2
      # S3로 업로드하기
      - name: upload to S3
        run: aws s3 cp ./$GITHUB_SHA.zip s3://${{ secrets.BUCKET_NAME }}/${{ secrets.PROJECT_NAME }}/$GITHUB_SHA.zip

      # codeDeploy 실행
      - name: request deploy to codedeploy
        run: aws deploy create-deployment 
            --application-name $CODE_DEPLOY_APP_NAME
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name $DEPLOYMENT_GROUP_NAME
            --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
